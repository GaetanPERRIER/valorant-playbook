{
  "version": 3,
  "sources": ["../../../../@unocss/preset-mini/dist/shared/preset-mini.BLqeNSHq.mjs", "../../../../@unocss/preset-mini/dist/shared/preset-mini.BkfCAdS7.mjs"],
  "sourcesContent": ["import { e as h, o as makeGlobalStaticRules, g as globalKeywords, k as colorResolver, q as isCSSMathFn, m as hasParseableColor, l as colorableShadows, p as positionMap, u as transformXYZ } from './preset-mini.CWuOZAHF.mjs';\n\nconst cursorValues = [\"auto\", \"default\", \"none\", \"context-menu\", \"help\", \"pointer\", \"progress\", \"wait\", \"cell\", \"crosshair\", \"text\", \"vertical-text\", \"alias\", \"copy\", \"move\", \"no-drop\", \"not-allowed\", \"grab\", \"grabbing\", \"all-scroll\", \"col-resize\", \"row-resize\", \"n-resize\", \"e-resize\", \"s-resize\", \"w-resize\", \"ne-resize\", \"nw-resize\", \"se-resize\", \"sw-resize\", \"ew-resize\", \"ns-resize\", \"nesw-resize\", \"nwse-resize\", \"zoom-in\", \"zoom-out\"];\nconst containValues = [\"none\", \"strict\", \"content\", \"size\", \"inline-size\", \"layout\", \"style\", \"paint\"];\nconst varEmpty = \" \";\nconst displays = [\n  [\"inline\", { display: \"inline\" }],\n  [\"block\", { display: \"block\" }],\n  [\"inline-block\", { display: \"inline-block\" }],\n  [\"contents\", { display: \"contents\" }],\n  [\"flow-root\", { display: \"flow-root\" }],\n  [\"list-item\", { display: \"list-item\" }],\n  [\"hidden\", { display: \"none\" }],\n  [/^display-(.+)$/, ([, c]) => ({ display: h.bracket.cssvar.global(c) })]\n];\nconst appearances = [\n  [\"visible\", { visibility: \"visible\" }],\n  [\"invisible\", { visibility: \"hidden\" }],\n  [\"backface-visible\", { \"backface-visibility\": \"visible\" }],\n  [\"backface-hidden\", { \"backface-visibility\": \"hidden\" }],\n  ...makeGlobalStaticRules(\"backface\", \"backface-visibility\")\n];\nconst cursors = [\n  [/^cursor-(.+)$/, ([, c]) => ({ cursor: h.bracket.cssvar.global(c) })],\n  ...cursorValues.map((v) => [`cursor-${v}`, { cursor: v }])\n];\nconst contains = [\n  [/^contain-(.*)$/, ([, d]) => {\n    if (h.bracket(d) != null) {\n      return {\n        contain: h.bracket(d).split(\" \").map((e) => h.cssvar.fraction(e) ?? e).join(\" \")\n      };\n    }\n    return containValues.includes(d) ? { contain: d } : void 0;\n  }]\n];\nconst pointerEvents = [\n  [\"pointer-events-auto\", { \"pointer-events\": \"auto\" }],\n  [\"pointer-events-none\", { \"pointer-events\": \"none\" }],\n  ...makeGlobalStaticRules(\"pointer-events\")\n];\nconst resizes = [\n  [\"resize-x\", { resize: \"horizontal\" }],\n  [\"resize-y\", { resize: \"vertical\" }],\n  [\"resize\", { resize: \"both\" }],\n  [\"resize-none\", { resize: \"none\" }],\n  ...makeGlobalStaticRules(\"resize\")\n];\nconst userSelects = [\n  [\"select-auto\", { \"-webkit-user-select\": \"auto\", \"user-select\": \"auto\" }],\n  [\"select-all\", { \"-webkit-user-select\": \"all\", \"user-select\": \"all\" }],\n  [\"select-text\", { \"-webkit-user-select\": \"text\", \"user-select\": \"text\" }],\n  [\"select-none\", { \"-webkit-user-select\": \"none\", \"user-select\": \"none\" }],\n  ...makeGlobalStaticRules(\"select\", \"user-select\")\n];\nconst whitespaces = [\n  [\n    /^(?:whitespace-|ws-)([-\\w]+)$/,\n    ([, v]) => [\"normal\", \"nowrap\", \"pre\", \"pre-line\", \"pre-wrap\", \"break-spaces\", ...globalKeywords].includes(v) ? { \"white-space\": v } : void 0,\n    { autocomplete: \"(whitespace|ws)-(normal|nowrap|pre|pre-line|pre-wrap|break-spaces)\" }\n  ]\n];\nconst contentVisibility = [\n  [/^intrinsic-size-(.+)$/, ([, d]) => ({ \"contain-intrinsic-size\": h.bracket.cssvar.global.fraction.rem(d) }), { autocomplete: \"intrinsic-size-<num>\" }],\n  [\"content-visibility-visible\", { \"content-visibility\": \"visible\" }],\n  [\"content-visibility-hidden\", { \"content-visibility\": \"hidden\" }],\n  [\"content-visibility-auto\", { \"content-visibility\": \"auto\" }],\n  ...makeGlobalStaticRules(\"content-visibility\")\n];\nconst contents = [\n  [/^content-(.+)$/, ([, v]) => ({ content: h.bracket.cssvar(v) })],\n  [\"content-empty\", { content: '\"\"' }],\n  [\"content-none\", { content: \"none\" }]\n];\nconst breaks = [\n  [\"break-normal\", { \"overflow-wrap\": \"normal\", \"word-break\": \"normal\" }],\n  [\"break-words\", { \"overflow-wrap\": \"break-word\" }],\n  [\"break-all\", { \"word-break\": \"break-all\" }],\n  [\"break-keep\", { \"word-break\": \"keep-all\" }],\n  [\"break-anywhere\", { \"overflow-wrap\": \"anywhere\" }]\n];\nconst textWraps = [\n  [\"text-wrap\", { \"text-wrap\": \"wrap\" }],\n  [\"text-nowrap\", { \"text-wrap\": \"nowrap\" }],\n  [\"text-balance\", { \"text-wrap\": \"balance\" }],\n  [\"text-pretty\", { \"text-wrap\": \"pretty\" }]\n];\nconst textOverflows = [\n  [\"truncate\", { \"overflow\": \"hidden\", \"text-overflow\": \"ellipsis\", \"white-space\": \"nowrap\" }],\n  [\"text-truncate\", { \"overflow\": \"hidden\", \"text-overflow\": \"ellipsis\", \"white-space\": \"nowrap\" }],\n  [\"text-ellipsis\", { \"text-overflow\": \"ellipsis\" }],\n  [\"text-clip\", { \"text-overflow\": \"clip\" }]\n];\nconst textTransforms = [\n  [\"case-upper\", { \"text-transform\": \"uppercase\" }],\n  [\"case-lower\", { \"text-transform\": \"lowercase\" }],\n  [\"case-capital\", { \"text-transform\": \"capitalize\" }],\n  [\"case-normal\", { \"text-transform\": \"none\" }],\n  ...makeGlobalStaticRules(\"case\", \"text-transform\")\n];\nconst fontStyles = [\n  [\"italic\", { \"font-style\": \"italic\" }],\n  [\"not-italic\", { \"font-style\": \"normal\" }],\n  [\"font-italic\", { \"font-style\": \"italic\" }],\n  [\"font-not-italic\", { \"font-style\": \"normal\" }],\n  [\"oblique\", { \"font-style\": \"oblique\" }],\n  [\"not-oblique\", { \"font-style\": \"normal\" }],\n  [\"font-oblique\", { \"font-style\": \"oblique\" }],\n  [\"font-not-oblique\", { \"font-style\": \"normal\" }]\n];\nconst fontSmoothings = [\n  [\"antialiased\", {\n    \"-webkit-font-smoothing\": \"antialiased\",\n    \"-moz-osx-font-smoothing\": \"grayscale\"\n  }],\n  [\"subpixel-antialiased\", {\n    \"-webkit-font-smoothing\": \"auto\",\n    \"-moz-osx-font-smoothing\": \"auto\"\n  }]\n];\n\nconst ringBase = {\n  \"--un-ring-inset\": varEmpty,\n  \"--un-ring-offset-width\": \"0px\",\n  \"--un-ring-offset-color\": \"#fff\",\n  \"--un-ring-width\": \"0px\",\n  \"--un-ring-color\": \"rgb(147 197 253 / 0.5)\",\n  \"--un-shadow\": \"0 0 rgb(0 0 0 / 0)\"\n};\nconst rings = [\n  // ring\n  [/^ring(?:-(.+))?$/, ([, d], { theme }) => {\n    const value = theme.ringWidth?.[d || \"DEFAULT\"] ?? h.px(d || \"1\");\n    if (value) {\n      return {\n        \"--un-ring-width\": value,\n        \"--un-ring-offset-shadow\": \"var(--un-ring-inset) 0 0 0 var(--un-ring-offset-width) var(--un-ring-offset-color)\",\n        \"--un-ring-shadow\": \"var(--un-ring-inset) 0 0 0 calc(var(--un-ring-width) + var(--un-ring-offset-width)) var(--un-ring-color)\",\n        \"box-shadow\": \"var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow)\"\n      };\n    }\n  }, { autocomplete: \"ring-$ringWidth\" }],\n  // size\n  [/^ring-(?:width-|size-)(.+)$/, handleWidth, { autocomplete: \"ring-(width|size)-$lineWidth\" }],\n  // offset size\n  [\"ring-offset\", { \"--un-ring-offset-width\": \"1px\" }],\n  [/^ring-offset-(?:width-|size-)?(.+)$/, ([, d], { theme }) => ({ \"--un-ring-offset-width\": theme.lineWidth?.[d] ?? h.bracket.cssvar.px(d) }), { autocomplete: \"ring-offset-(width|size)-$lineWidth\" }],\n  // colors\n  [/^ring-(.+)$/, handleColorOrWidth, { autocomplete: \"ring-$colors\" }],\n  [/^ring-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-ring-opacity\": h.bracket.percent.cssvar(opacity) }), { autocomplete: \"ring-(op|opacity)-<percent>\" }],\n  // offset color\n  [/^ring-offset-(.+)$/, colorResolver(\"--un-ring-offset-color\", \"ring-offset\", \"borderColor\"), { autocomplete: \"ring-offset-$colors\" }],\n  [/^ring-offset-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-ring-offset-opacity\": h.bracket.percent.cssvar(opacity) }), { autocomplete: \"ring-offset-(op|opacity)-<percent>\" }],\n  // style\n  [\"ring-inset\", { \"--un-ring-inset\": \"inset\" }]\n];\nfunction handleWidth([, b], { theme }) {\n  return { \"--un-ring-width\": theme.ringWidth?.[b] ?? h.bracket.cssvar.px(b) };\n}\nfunction handleColorOrWidth(match, ctx) {\n  if (isCSSMathFn(h.bracket(match[1])))\n    return handleWidth(match, ctx);\n  return colorResolver(\"--un-ring-color\", \"ring\", \"borderColor\")(match, ctx);\n}\n\nconst boxShadowsBase = {\n  \"--un-ring-offset-shadow\": \"0 0 rgb(0 0 0 / 0)\",\n  \"--un-ring-shadow\": \"0 0 rgb(0 0 0 / 0)\",\n  \"--un-shadow-inset\": varEmpty,\n  \"--un-shadow\": \"0 0 rgb(0 0 0 / 0)\"\n};\nconst boxShadows = [\n  // color\n  [/^shadow(?:-(.+))?$/, (match, context) => {\n    const [, d] = match;\n    const { theme } = context;\n    const v = theme.boxShadow?.[d || \"DEFAULT\"];\n    const c = d ? h.bracket.cssvar(d) : void 0;\n    if ((v != null || c != null) && !hasParseableColor(c, theme, \"shadowColor\")) {\n      return {\n        \"--un-shadow\": colorableShadows(v || c, \"--un-shadow-color\").join(\",\"),\n        \"box-shadow\": \"var(--un-ring-offset-shadow), var(--un-ring-shadow), var(--un-shadow)\"\n      };\n    }\n    return colorResolver(\"--un-shadow-color\", \"shadow\", \"shadowColor\")(match, context);\n  }, { autocomplete: [\"shadow-$colors\", \"shadow-$boxShadow\"] }],\n  [/^shadow-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-shadow-opacity\": h.bracket.percent.cssvar(opacity) }), { autocomplete: \"shadow-(op|opacity)-<percent>\" }],\n  // inset\n  [\"shadow-inset\", { \"--un-shadow-inset\": \"inset\" }]\n];\n\nconst transformValues = [\n  \"translate\",\n  \"rotate\",\n  \"scale\"\n];\nconst transformCpu = [\n  \"translateX(var(--un-translate-x))\",\n  \"translateY(var(--un-translate-y))\",\n  \"translateZ(var(--un-translate-z))\",\n  \"rotate(var(--un-rotate))\",\n  \"rotateX(var(--un-rotate-x))\",\n  \"rotateY(var(--un-rotate-y))\",\n  \"rotateZ(var(--un-rotate-z))\",\n  \"skewX(var(--un-skew-x))\",\n  \"skewY(var(--un-skew-y))\",\n  \"scaleX(var(--un-scale-x))\",\n  \"scaleY(var(--un-scale-y))\",\n  \"scaleZ(var(--un-scale-z))\"\n].join(\" \");\nconst transformGpu = [\n  \"translate3d(var(--un-translate-x), var(--un-translate-y), var(--un-translate-z))\",\n  \"rotate(var(--un-rotate))\",\n  \"rotateX(var(--un-rotate-x))\",\n  \"rotateY(var(--un-rotate-y))\",\n  \"rotateZ(var(--un-rotate-z))\",\n  \"skewX(var(--un-skew-x))\",\n  \"skewY(var(--un-skew-y))\",\n  \"scaleX(var(--un-scale-x))\",\n  \"scaleY(var(--un-scale-y))\",\n  \"scaleZ(var(--un-scale-z))\"\n].join(\" \");\nconst transformBase = {\n  // transform\n  \"--un-rotate\": 0,\n  \"--un-rotate-x\": 0,\n  \"--un-rotate-y\": 0,\n  \"--un-rotate-z\": 0,\n  \"--un-scale-x\": 1,\n  \"--un-scale-y\": 1,\n  \"--un-scale-z\": 1,\n  \"--un-skew-x\": 0,\n  \"--un-skew-y\": 0,\n  \"--un-translate-x\": 0,\n  \"--un-translate-y\": 0,\n  \"--un-translate-z\": 0\n};\nconst transforms = [\n  // origins\n  [/^(?:transform-)?origin-(.+)$/, ([, s]) => ({ \"transform-origin\": positionMap[s] ?? h.bracket.cssvar(s) }), { autocomplete: [`transform-origin-(${Object.keys(positionMap).join(\"|\")})`, `origin-(${Object.keys(positionMap).join(\"|\")})`] }],\n  // perspectives\n  [/^(?:transform-)?perspect(?:ive)?-(.+)$/, ([, s]) => {\n    const v = h.bracket.cssvar.px.numberWithUnit(s);\n    if (v != null) {\n      return {\n        \"-webkit-perspective\": v,\n        \"perspective\": v\n      };\n    }\n  }],\n  // skip 1 & 2 letters shortcut\n  [/^(?:transform-)?perspect(?:ive)?-origin-(.+)$/, ([, s]) => {\n    const v = h.bracket.cssvar(s) ?? (s.length >= 3 ? positionMap[s] : void 0);\n    if (v != null) {\n      return {\n        \"-webkit-perspective-origin\": v,\n        \"perspective-origin\": v\n      };\n    }\n  }],\n  // modifiers\n  [/^(?:transform-)?translate-()(.+)$/, handleTranslate],\n  [/^(?:transform-)?translate-([xyz])-(.+)$/, handleTranslate],\n  [/^(?:transform-)?rotate-()(.+)$/, handleRotate],\n  [/^(?:transform-)?rotate-([xyz])-(.+)$/, handleRotate],\n  [/^(?:transform-)?skew-()(.+)$/, handleSkew],\n  [/^(?:transform-)?skew-([xy])-(.+)$/, handleSkew, { autocomplete: [\"transform-skew-(x|y)-<percent>\", \"skew-(x|y)-<percent>\"] }],\n  [/^(?:transform-)?scale-()(.+)$/, handleScale],\n  [/^(?:transform-)?scale-([xyz])-(.+)$/, handleScale, { autocomplete: [`transform-(${transformValues.join(\"|\")})-<percent>`, `transform-(${transformValues.join(\"|\")})-(x|y|z)-<percent>`, `(${transformValues.join(\"|\")})-<percent>`, `(${transformValues.join(\"|\")})-(x|y|z)-<percent>`] }],\n  // style\n  [/^(?:transform-)?preserve-3d$/, () => ({ \"transform-style\": \"preserve-3d\" })],\n  [/^(?:transform-)?preserve-flat$/, () => ({ \"transform-style\": \"flat\" })],\n  // base\n  [\"transform\", { transform: transformCpu }],\n  [\"transform-cpu\", { transform: transformCpu }],\n  [\"transform-gpu\", { transform: transformGpu }],\n  [\"transform-none\", { transform: \"none\" }],\n  ...makeGlobalStaticRules(\"transform\")\n];\nfunction handleTranslate([, d, b], { theme }) {\n  const v = theme.spacing?.[b] ?? h.bracket.cssvar.fraction.rem(b);\n  if (v != null) {\n    return [\n      ...transformXYZ(d, v, \"translate\"),\n      [\"transform\", transformCpu]\n    ];\n  }\n}\nfunction handleScale([, d, b]) {\n  const v = h.bracket.cssvar.fraction.percent(b);\n  if (v != null) {\n    return [\n      ...transformXYZ(d, v, \"scale\"),\n      [\"transform\", transformCpu]\n    ];\n  }\n}\nfunction handleRotate([, d = \"\", b]) {\n  const v = h.bracket.cssvar.degree(b);\n  if (v != null) {\n    if (d) {\n      return {\n        \"--un-rotate\": 0,\n        [`--un-rotate-${d}`]: v,\n        \"transform\": transformCpu\n      };\n    } else {\n      return {\n        \"--un-rotate-x\": 0,\n        \"--un-rotate-y\": 0,\n        \"--un-rotate-z\": 0,\n        \"--un-rotate\": v,\n        \"transform\": transformCpu\n      };\n    }\n  }\n}\nfunction handleSkew([, d, b]) {\n  const v = h.bracket.cssvar.degree(b);\n  if (v != null) {\n    return [\n      ...transformXYZ(d, v, \"skew\"),\n      [\"transform\", transformCpu]\n    ];\n  }\n}\n\nexport { rings as a, boxShadowsBase as b, boxShadows as c, displays as d, appearances as e, cursors as f, contains as g, resizes as h, contentVisibility as i, contents as j, breaks as k, textOverflows as l, textTransforms as m, fontStyles as n, fontSmoothings as o, pointerEvents as p, transformBase as q, ringBase as r, transforms as s, textWraps as t, userSelects as u, varEmpty as v, whitespaces as w };\n", "import { g as globalKeywords, e as h, q as isCSSMathFn, k as colorResolver, d as directionMap, m as hasParseableColor, c as cornerMap, j as parseColor, t as isSize, o as makeGlobalStaticRules, l as colorableShadows, s as splitShorthand, i as insetMap, r as resolveBreakpoints, f as directionSize } from './preset-mini.CWuOZAHF.mjs';\nimport { colorToString, colorOpacityToString } from '@unocss/rule-utils';\nimport { warnOnce, toArray } from '@unocss/core';\nimport { d as displays, i as contentVisibility, j as contents, l as textOverflows, m as textTransforms, n as fontStyles, o as fontSmoothings, c as boxShadows, a as rings, f as cursors, e as appearances, p as pointerEvents, h as resizes, u as userSelects, w as whitespaces, k as breaks, s as transforms, g as contains, t as textWraps } from './preset-mini.BLqeNSHq.mjs';\n\nconst verticalAlignAlias = {\n  \"mid\": \"middle\",\n  \"base\": \"baseline\",\n  \"btm\": \"bottom\",\n  \"baseline\": \"baseline\",\n  \"top\": \"top\",\n  \"start\": \"top\",\n  \"middle\": \"middle\",\n  \"bottom\": \"bottom\",\n  \"end\": \"bottom\",\n  \"text-top\": \"text-top\",\n  \"text-bottom\": \"text-bottom\",\n  \"sub\": \"sub\",\n  \"super\": \"super\",\n  ...Object.fromEntries(globalKeywords.map((x) => [x, x]))\n};\nconst verticalAligns = [\n  [\n    /^(?:vertical|align|v)-([-\\w]+%?)$/,\n    ([, v]) => ({ \"vertical-align\": verticalAlignAlias[v] ?? h.numberWithUnit(v) }),\n    {\n      autocomplete: [\n        `(vertical|align|v)-(${Object.keys(verticalAlignAlias).join(\"|\")})`,\n        \"(vertical|align|v)-<percentage>\"\n      ]\n    }\n  ]\n];\nconst textAligns = [\"center\", \"left\", \"right\", \"justify\", \"start\", \"end\"].map((v) => [`text-${v}`, { \"text-align\": v }]);\n\nconst outline = [\n  // size\n  [/^outline-(?:width-|size-)?(.+)$/, handleWidth$2, { autocomplete: \"outline-(width|size)-<num>\" }],\n  // color\n  [/^outline-(?:color-)?(.+)$/, handleColorOrWidth$2, { autocomplete: \"outline-$colors\" }],\n  // offset\n  [/^outline-offset-(.+)$/, ([, d], { theme }) => ({ \"outline-offset\": theme.lineWidth?.[d] ?? h.bracket.cssvar.global.px(d) }), { autocomplete: \"outline-(offset)-<num>\" }],\n  // style\n  [\"outline\", { \"outline-style\": \"solid\" }],\n  ...[\"auto\", \"dashed\", \"dotted\", \"double\", \"hidden\", \"solid\", \"groove\", \"ridge\", \"inset\", \"outset\", ...globalKeywords].map((v) => [`outline-${v}`, { \"outline-style\": v }]),\n  [\"outline-none\", { \"outline\": \"2px solid transparent\", \"outline-offset\": \"2px\" }]\n];\nfunction handleWidth$2([, b], { theme }) {\n  return { \"outline-width\": theme.lineWidth?.[b] ?? h.bracket.cssvar.global.px(b) };\n}\nfunction handleColorOrWidth$2(match, ctx) {\n  if (isCSSMathFn(h.bracket(match[1])))\n    return handleWidth$2(match, ctx);\n  return colorResolver(\"outline-color\", \"outline-color\", \"borderColor\")(match, ctx);\n}\nconst appearance = [\n  [\"appearance-auto\", { \"-webkit-appearance\": \"auto\", \"appearance\": \"auto\" }],\n  [\"appearance-none\", { \"-webkit-appearance\": \"none\", \"appearance\": \"none\" }]\n];\nfunction willChangeProperty(prop) {\n  return h.properties.auto.global(prop) ?? {\n    contents: \"contents\",\n    scroll: \"scroll-position\"\n  }[prop];\n}\nconst willChange = [\n  [/^will-change-(.+)/, ([, p]) => ({ \"will-change\": willChangeProperty(p) })]\n];\n\nconst borderStyles = [\"solid\", \"dashed\", \"dotted\", \"double\", \"hidden\", \"none\", \"groove\", \"ridge\", \"inset\", \"outset\", ...globalKeywords];\nconst borders = [\n  // compound\n  [/^(?:border|b)()(?:-(.+))?$/, handlerBorderSize, { autocomplete: \"(border|b)-<directions>\" }],\n  [/^(?:border|b)-([xy])(?:-(.+))?$/, handlerBorderSize],\n  [/^(?:border|b)-([rltbse])(?:-(.+))?$/, handlerBorderSize],\n  [/^(?:border|b)-(block|inline)(?:-(.+))?$/, handlerBorderSize],\n  [/^(?:border|b)-([bi][se])(?:-(.+))?$/, handlerBorderSize],\n  // size\n  [/^(?:border|b)-()(?:width|size)-(.+)$/, handlerBorderSize, { autocomplete: [\"(border|b)-<num>\", \"(border|b)-<directions>-<num>\"] }],\n  [/^(?:border|b)-([xy])-(?:width|size)-(.+)$/, handlerBorderSize],\n  [/^(?:border|b)-([rltbse])-(?:width|size)-(.+)$/, handlerBorderSize],\n  [/^(?:border|b)-(block|inline)-(?:width|size)-(.+)$/, handlerBorderSize],\n  [/^(?:border|b)-([bi][se])-(?:width|size)-(.+)$/, handlerBorderSize],\n  // colors\n  [/^(?:border|b)-()(?:color-)?(.+)$/, handlerBorderColorOrSize, { autocomplete: [\"(border|b)-$colors\", \"(border|b)-<directions>-$colors\"] }],\n  [/^(?:border|b)-([xy])-(?:color-)?(.+)$/, handlerBorderColorOrSize],\n  [/^(?:border|b)-([rltbse])-(?:color-)?(.+)$/, handlerBorderColorOrSize],\n  [/^(?:border|b)-(block|inline)-(?:color-)?(.+)$/, handlerBorderColorOrSize],\n  [/^(?:border|b)-([bi][se])-(?:color-)?(.+)$/, handlerBorderColorOrSize],\n  // opacity\n  [/^(?:border|b)-()op(?:acity)?-?(.+)$/, handlerBorderOpacity, { autocomplete: \"(border|b)-(op|opacity)-<percent>\" }],\n  [/^(?:border|b)-([xy])-op(?:acity)?-?(.+)$/, handlerBorderOpacity],\n  [/^(?:border|b)-([rltbse])-op(?:acity)?-?(.+)$/, handlerBorderOpacity],\n  [/^(?:border|b)-(block|inline)-op(?:acity)?-?(.+)$/, handlerBorderOpacity],\n  [/^(?:border|b)-([bi][se])-op(?:acity)?-?(.+)$/, handlerBorderOpacity],\n  // radius\n  [/^(?:border-|b-)?(?:rounded|rd)()(?:-(.+))?$/, handlerRounded, { autocomplete: [\"(border|b)-(rounded|rd)\", \"(border|b)-(rounded|rd)-<num>\", \"(rounded|rd)\", \"(rounded|rd)-<num>\"] }],\n  [/^(?:border-|b-)?(?:rounded|rd)-([rltbse])(?:-(.+))?$/, handlerRounded],\n  [/^(?:border-|b-)?(?:rounded|rd)-([rltb]{2})(?:-(.+))?$/, handlerRounded],\n  [/^(?:border-|b-)?(?:rounded|rd)-([bise][se])(?:-(.+))?$/, handlerRounded],\n  [/^(?:border-|b-)?(?:rounded|rd)-([bi][se]-[bi][se])(?:-(.+))?$/, handlerRounded],\n  // style\n  [/^(?:border|b)-(?:style-)?()(.+)$/, handlerBorderStyle, { autocomplete: [\"(border|b)-style\", `(border|b)-(${borderStyles.join(\"|\")})`, \"(border|b)-<directions>-style\", `(border|b)-<directions>-(${borderStyles.join(\"|\")})`, `(border|b)-<directions>-style-(${borderStyles.join(\"|\")})`, `(border|b)-style-(${borderStyles.join(\"|\")})`] }],\n  [/^(?:border|b)-([xy])-(?:style-)?(.+)$/, handlerBorderStyle],\n  [/^(?:border|b)-([rltbse])-(?:style-)?(.+)$/, handlerBorderStyle],\n  [/^(?:border|b)-(block|inline)-(?:style-)?(.+)$/, handlerBorderStyle],\n  [/^(?:border|b)-([bi][se])-(?:style-)?(.+)$/, handlerBorderStyle]\n];\nfunction transformBorderColor(color, alpha, direction) {\n  if (alpha != null) {\n    return {\n      [`border${direction}-color`]: colorToString(color, alpha)\n    };\n  }\n  if (direction === \"\") {\n    const object = {};\n    const opacityVar = `--un-border-opacity`;\n    const result = colorToString(color, `var(${opacityVar})`);\n    if (result.includes(opacityVar))\n      object[opacityVar] = typeof color === \"string\" ? 1 : colorOpacityToString(color);\n    object[\"border-color\"] = result;\n    return object;\n  } else {\n    const object = {};\n    const opacityVar = \"--un-border-opacity\";\n    const opacityDirectionVar = `--un-border${direction}-opacity`;\n    const result = colorToString(color, `var(${opacityDirectionVar})`);\n    if (result.includes(opacityDirectionVar)) {\n      object[opacityVar] = typeof color === \"string\" ? 1 : colorOpacityToString(color);\n      object[opacityDirectionVar] = `var(${opacityVar})`;\n    }\n    object[`border${direction}-color`] = result;\n    return object;\n  }\n}\nfunction borderColorResolver(direction) {\n  return ([, body], theme) => {\n    const data = parseColor(body, theme, \"borderColor\");\n    if (!data)\n      return;\n    const { alpha, color, cssColor } = data;\n    if (cssColor)\n      return transformBorderColor(cssColor, alpha, direction);\n    else if (color)\n      return transformBorderColor(color, alpha, direction);\n  };\n}\nfunction handlerBorderSize([, a = \"\", b], { theme }) {\n  const v = theme.lineWidth?.[b || \"DEFAULT\"] ?? h.bracket.cssvar.global.px(b || \"1\");\n  if (a in directionMap && v != null)\n    return directionMap[a].map((i) => [`border${i}-width`, v]);\n}\nfunction handlerBorderColorOrSize([, a = \"\", b], ctx) {\n  if (a in directionMap) {\n    if (isCSSMathFn(h.bracket(b)))\n      return handlerBorderSize([\"\", a, b], ctx);\n    if (hasParseableColor(b, ctx.theme, \"borderColor\")) {\n      return Object.assign(\n        {},\n        ...directionMap[a].map((i) => borderColorResolver(i)([\"\", b], ctx.theme))\n      );\n    }\n  }\n}\nfunction handlerBorderOpacity([, a = \"\", opacity]) {\n  const v = h.bracket.percent.cssvar(opacity);\n  if (a in directionMap && v != null)\n    return directionMap[a].map((i) => [`--un-border${i}-opacity`, v]);\n}\nfunction handlerRounded([, a = \"\", s], { theme }) {\n  const v = theme.borderRadius?.[s || \"DEFAULT\"] || h.bracket.cssvar.global.fraction.rem(s || \"1\");\n  if (a in cornerMap && v != null)\n    return cornerMap[a].map((i) => [`border${i}-radius`, v]);\n}\nfunction handlerBorderStyle([, a = \"\", s]) {\n  if (borderStyles.includes(s) && a in directionMap)\n    return directionMap[a].map((i) => [`border${i}-style`, s]);\n}\n\nconst opacity = [\n  [/^op(?:acity)?-?(.+)$/, ([, d]) => ({ opacity: h.bracket.percent.cssvar(d) })]\n];\nconst bgUrlRE = /^\\[url\\(.+\\)\\]$/;\nconst bgLengthRE = /^\\[(length|size):.+\\]$/;\nconst bgPositionRE = /^\\[position:.+\\]$/;\nconst bgGradientRE = /^\\[(linear|conic|radial)-gradient\\(.+\\)\\]$/;\nconst bgColors = [\n  [/^bg-(.+)$/, (...args) => {\n    const d = args[0][1];\n    if (bgUrlRE.test(d))\n      return { \"--un-url\": h.bracket(d), \"background-image\": \"var(--un-url)\" };\n    if (bgLengthRE.test(d) && h.bracketOfLength(d) != null)\n      return { \"background-size\": h.bracketOfLength(d).split(\" \").map((e) => h.fraction.auto.px.cssvar(e) ?? e).join(\" \") };\n    if ((isSize(d) || bgPositionRE.test(d)) && h.bracketOfPosition(d) != null)\n      return { \"background-position\": h.bracketOfPosition(d).split(\" \").map((e) => h.position.fraction.auto.px.cssvar(e) ?? e).join(\" \") };\n    if (bgGradientRE.test(d))\n      return { \"background-image\": h.bracket(d) };\n    return colorResolver(\"background-color\", \"bg\", \"backgroundColor\")(...args);\n  }, { autocomplete: \"bg-$colors\" }],\n  [/^bg-op(?:acity)?-?(.+)$/, ([, opacity2]) => ({ \"--un-bg-opacity\": h.bracket.percent.cssvar(opacity2) }), { autocomplete: \"bg-(op|opacity)-<percent>\" }]\n];\nconst colorScheme = [\n  [/^color-scheme-(\\w+)$/, ([, v]) => ({ \"color-scheme\": v })]\n];\n\nconst containerParent = [\n  [/^@container(?:\\/(\\w+))?(?:-(normal))?$/, ([, l, v]) => {\n    warnOnce(\"The container query rule is experimental and may not follow semver.\");\n    return {\n      \"container-type\": v ?? \"inline-size\",\n      \"container-name\": l\n    };\n  }]\n];\n\nconst decorationStyles = [\"solid\", \"double\", \"dotted\", \"dashed\", \"wavy\", ...globalKeywords];\nconst textDecorations = [\n  [/^(?:decoration-)?(underline|overline|line-through)$/, ([, s]) => ({ \"text-decoration-line\": s }), { autocomplete: \"decoration-(underline|overline|line-through)\" }],\n  // size\n  [/^(?:underline|decoration)-(?:size-)?(.+)$/, handleWidth$1, { autocomplete: \"(underline|decoration)-<num>\" }],\n  [/^(?:underline|decoration)-(auto|from-font)$/, ([, s]) => ({ \"text-decoration-thickness\": s }), { autocomplete: \"(underline|decoration)-(auto|from-font)\" }],\n  // colors\n  [/^(?:underline|decoration)-(.+)$/, handleColorOrWidth$1, { autocomplete: \"(underline|decoration)-$colors\" }],\n  [/^(?:underline|decoration)-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-line-opacity\": h.bracket.percent.cssvar(opacity) }), { autocomplete: \"(underline|decoration)-(op|opacity)-<percent>\" }],\n  // offset\n  [/^(?:underline|decoration)-offset-(.+)$/, ([, s], { theme }) => ({ \"text-underline-offset\": theme.lineWidth?.[s] ?? h.auto.bracket.cssvar.global.px(s) }), { autocomplete: \"(underline|decoration)-(offset)-<num>\" }],\n  // style\n  ...decorationStyles.map((v) => [`underline-${v}`, { \"text-decoration-style\": v }]),\n  ...decorationStyles.map((v) => [`decoration-${v}`, { \"text-decoration-style\": v }]),\n  [\"no-underline\", { \"text-decoration\": \"none\" }],\n  [\"decoration-none\", { \"text-decoration\": \"none\" }]\n];\nfunction handleWidth$1([, b], { theme }) {\n  return { \"text-decoration-thickness\": theme.lineWidth?.[b] ?? h.bracket.cssvar.global.px(b) };\n}\nfunction handleColorOrWidth$1(match, ctx) {\n  if (isCSSMathFn(h.bracket(match[1])))\n    return handleWidth$1(match, ctx);\n  const result = colorResolver(\"text-decoration-color\", \"line\", \"borderColor\")(match, ctx);\n  if (result) {\n    return {\n      \"-webkit-text-decoration-color\": result[\"text-decoration-color\"],\n      ...result\n    };\n  }\n}\n\nconst transitionPropertyGroup = {\n  all: \"all\",\n  colors: [\"color\", \"background-color\", \"border-color\", \"outline-color\", \"text-decoration-color\", \"fill\", \"stroke\"].join(\",\"),\n  none: \"none\",\n  opacity: \"opacity\",\n  shadow: \"box-shadow\",\n  transform: \"transform\"\n};\nfunction transitionProperty(prop) {\n  return h.properties(prop) ?? transitionPropertyGroup[prop];\n}\nconst transitions = [\n  // transition\n  [\n    /^transition(?:-([a-z-]+(?:,[a-z-]+)*))?(?:-(\\d+))?$/,\n    ([, prop, d], { theme }) => {\n      const p = prop != null ? transitionProperty(prop) : [transitionPropertyGroup.colors, \"opacity\", \"box-shadow\", \"transform\", \"filter\", \"backdrop-filter\"].join(\",\");\n      if (p) {\n        const duration = theme.duration?.[d || \"DEFAULT\"] ?? h.time(d || \"150\");\n        return {\n          \"transition-property\": p,\n          \"transition-timing-function\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\n          \"transition-duration\": duration\n        };\n      }\n    },\n    { autocomplete: `transition-(${Object.keys(transitionPropertyGroup).join(\"|\")})` }\n  ],\n  // timings\n  [\n    /^(?:transition-)?duration-(.+)$/,\n    ([, d], { theme }) => ({ \"transition-duration\": theme.duration?.[d || \"DEFAULT\"] ?? h.bracket.cssvar.time(d) }),\n    { autocomplete: [\"transition-duration-$duration\", \"duration-$duration\"] }\n  ],\n  [\n    /^(?:transition-)?delay-(.+)$/,\n    ([, d], { theme }) => ({ \"transition-delay\": theme.duration?.[d || \"DEFAULT\"] ?? h.bracket.cssvar.time(d) }),\n    { autocomplete: [\"transition-delay-$duration\", \"delay-$duration\"] }\n  ],\n  [\n    /^(?:transition-)?ease(?:-(.+))?$/,\n    ([, d], { theme }) => ({ \"transition-timing-function\": theme.easing?.[d || \"DEFAULT\"] ?? h.bracket.cssvar(d) }),\n    { autocomplete: [\"transition-ease-(linear|in|out|in-out|DEFAULT)\", \"ease-(linear|in|out|in-out|DEFAULT)\"] }\n  ],\n  // props\n  [\n    /^(?:transition-)?property-(.+)$/,\n    ([, v]) => ({ \"transition-property\": h.bracket.global(v) || transitionProperty(v) }),\n    { autocomplete: [`transition-property-(${[...globalKeywords, ...Object.keys(transitionPropertyGroup)].join(\"|\")})`] }\n  ],\n  // none\n  [\"transition-none\", { transition: \"none\" }],\n  ...makeGlobalStaticRules(\"transition\")\n];\n\nconst flex = [\n  // display\n  [\"flex\", { display: \"flex\" }],\n  [\"inline-flex\", { display: \"inline-flex\" }],\n  [\"flex-inline\", { display: \"inline-flex\" }],\n  // flex\n  [/^flex-(.*)$/, ([, d]) => ({ flex: h.bracket(d) != null ? h.bracket(d).split(\" \").map((e) => h.cssvar.fraction(e) ?? e).join(\" \") : h.cssvar.fraction(d) })],\n  [\"flex-1\", { flex: \"1 1 0%\" }],\n  [\"flex-auto\", { flex: \"1 1 auto\" }],\n  [\"flex-initial\", { flex: \"0 1 auto\" }],\n  [\"flex-none\", { flex: \"none\" }],\n  // shrink/grow/basis\n  [/^(?:flex-)?shrink(?:-(.*))?$/, ([, d = \"\"]) => ({ \"flex-shrink\": h.bracket.cssvar.number(d) ?? 1 }), { autocomplete: [\"flex-shrink-<num>\", \"shrink-<num>\"] }],\n  [/^(?:flex-)?grow(?:-(.*))?$/, ([, d = \"\"]) => ({ \"flex-grow\": h.bracket.cssvar.number(d) ?? 1 }), { autocomplete: [\"flex-grow-<num>\", \"grow-<num>\"] }],\n  [/^(?:flex-)?basis-(.+)$/, ([, d], { theme }) => ({ \"flex-basis\": theme.spacing?.[d] ?? h.bracket.cssvar.auto.fraction.rem(d) }), { autocomplete: [\"flex-basis-$spacing\", \"basis-$spacing\"] }],\n  // directions\n  [\"flex-row\", { \"flex-direction\": \"row\" }],\n  [\"flex-row-reverse\", { \"flex-direction\": \"row-reverse\" }],\n  [\"flex-col\", { \"flex-direction\": \"column\" }],\n  [\"flex-col-reverse\", { \"flex-direction\": \"column-reverse\" }],\n  // wraps\n  [\"flex-wrap\", { \"flex-wrap\": \"wrap\" }],\n  [\"flex-wrap-reverse\", { \"flex-wrap\": \"wrap-reverse\" }],\n  [\"flex-nowrap\", { \"flex-wrap\": \"nowrap\" }]\n];\n\nconst fonts = [\n  // text\n  [/^text-(.+)$/, handleText, { autocomplete: \"text-$fontSize\" }],\n  // text size\n  [/^(?:text|font)-size-(.+)$/, handleSize, { autocomplete: \"text-size-$fontSize\" }],\n  // text colors\n  [/^text-(?:color-)?(.+)$/, handlerColorOrSize, { autocomplete: \"text-$colors\" }],\n  // colors\n  [/^(?:color|c)-(.+)$/, colorResolver(\"color\", \"text\", \"textColor\"), { autocomplete: \"(color|c)-$colors\" }],\n  // style\n  [/^(?:text|color|c)-(.+)$/, ([, v]) => globalKeywords.includes(v) ? { color: v } : void 0, { autocomplete: `(text|color|c)-(${globalKeywords.join(\"|\")})` }],\n  // opacity\n  [/^(?:text|color|c)-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-text-opacity\": h.bracket.percent.cssvar(opacity) }), { autocomplete: \"(text|color|c)-(op|opacity)-<percent>\" }],\n  // weights\n  [\n    /^(?:font|fw)-?([^-]+)$/,\n    ([, s], { theme }) => ({ \"font-weight\": theme.fontWeight?.[s] || h.bracket.global.number(s) }),\n    {\n      autocomplete: [\n        \"(font|fw)-(100|200|300|400|500|600|700|800|900)\",\n        \"(font|fw)-$fontWeight\"\n      ]\n    }\n  ],\n  // leadings\n  [\n    /^(?:font-)?(?:leading|lh|line-height)-(.+)$/,\n    ([, s], { theme }) => ({ \"line-height\": handleThemeByKey(s, theme, \"lineHeight\") }),\n    { autocomplete: \"(leading|lh|line-height)-$lineHeight\" }\n  ],\n  // synthesis\n  [\"font-synthesis-weight\", { \"font-synthesis\": \"weight\" }],\n  [\"font-synthesis-style\", { \"font-synthesis\": \"style\" }],\n  [\"font-synthesis-small-caps\", { \"font-synthesis\": \"small-caps\" }],\n  [\"font-synthesis-none\", { \"font-synthesis\": \"none\" }],\n  [/^font-synthesis-(.+)$/, ([, s]) => ({ \"font-synthesis\": h.bracket.cssvar.global(s) })],\n  // tracking\n  [\n    /^(?:font-)?tracking-(.+)$/,\n    ([, s], { theme }) => ({ \"letter-spacing\": theme.letterSpacing?.[s] || h.bracket.cssvar.global.rem(s) }),\n    { autocomplete: \"tracking-$letterSpacing\" }\n  ],\n  // word-spacing\n  [\n    /^(?:font-)?word-spacing-(.+)$/,\n    ([, s], { theme }) => ({ \"word-spacing\": theme.wordSpacing?.[s] || h.bracket.cssvar.global.rem(s) }),\n    { autocomplete: \"word-spacing-$wordSpacing\" }\n  ],\n  // stretch\n  [\"font-stretch-normal\", { \"font-stretch\": \"normal\" }],\n  [\"font-stretch-ultra-condensed\", { \"font-stretch\": \"ultra-condensed\" }],\n  [\"font-stretch-extra-condensed\", { \"font-stretch\": \"extra-condensed\" }],\n  [\"font-stretch-condensed\", { \"font-stretch\": \"condensed\" }],\n  [\"font-stretch-semi-condensed\", { \"font-stretch\": \"semi-condensed\" }],\n  [\"font-stretch-semi-expanded\", { \"font-stretch\": \"semi-expanded\" }],\n  [\"font-stretch-expanded\", { \"font-stretch\": \"expanded\" }],\n  [\"font-stretch-extra-expanded\", { \"font-stretch\": \"extra-expanded\" }],\n  [\"font-stretch-ultra-expanded\", { \"font-stretch\": \"ultra-expanded\" }],\n  [\n    /^font-stretch-(.+)$/,\n    ([, s]) => ({ \"font-stretch\": h.bracket.cssvar.fraction.global(s) }),\n    { autocomplete: \"font-stretch-<percentage>\" }\n  ],\n  // family\n  [\n    /^font-(.+)$/,\n    ([, d], { theme }) => ({ \"font-family\": theme.fontFamily?.[d] || h.bracket.cssvar.global(d) }),\n    { autocomplete: \"font-$fontFamily\" }\n  ]\n];\nconst tabSizes = [\n  [/^tab(?:-(.+))?$/, ([, s]) => {\n    const v = h.bracket.cssvar.global.number(s || \"4\");\n    if (v != null) {\n      return {\n        \"-moz-tab-size\": v,\n        \"-o-tab-size\": v,\n        \"tab-size\": v\n      };\n    }\n  }]\n];\nconst textIndents = [\n  [/^indent(?:-(.+))?$/, ([, s], { theme }) => ({ \"text-indent\": theme.textIndent?.[s || \"DEFAULT\"] || h.bracket.cssvar.global.fraction.rem(s) }), { autocomplete: \"indent-$textIndent\" }]\n];\nconst textStrokes = [\n  // widths\n  [/^text-stroke(?:-(.+))?$/, ([, s], { theme }) => ({ \"-webkit-text-stroke-width\": theme.textStrokeWidth?.[s || \"DEFAULT\"] || h.bracket.cssvar.px(s) }), { autocomplete: \"text-stroke-$textStrokeWidth\" }],\n  // colors\n  [/^text-stroke-(.+)$/, colorResolver(\"-webkit-text-stroke-color\", \"text-stroke\", \"borderColor\"), { autocomplete: \"text-stroke-$colors\" }],\n  [/^text-stroke-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-text-stroke-opacity\": h.bracket.percent.cssvar(opacity) }), { autocomplete: \"text-stroke-(op|opacity)-<percent>\" }]\n];\nconst textShadows = [\n  [/^text-shadow(?:-(.+))?$/, ([, s], { theme }) => {\n    const v = theme.textShadow?.[s || \"DEFAULT\"];\n    if (v != null) {\n      return {\n        \"--un-text-shadow\": colorableShadows(v, \"--un-text-shadow-color\").join(\",\"),\n        \"text-shadow\": \"var(--un-text-shadow)\"\n      };\n    }\n    return { \"text-shadow\": h.bracket.cssvar.global(s) };\n  }, { autocomplete: \"text-shadow-$textShadow\" }],\n  // colors\n  [/^text-shadow-color-(.+)$/, colorResolver(\"--un-text-shadow-color\", \"text-shadow\", \"shadowColor\"), { autocomplete: \"text-shadow-color-$colors\" }],\n  [/^text-shadow-color-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-text-shadow-opacity\": h.bracket.percent.cssvar(opacity) }), { autocomplete: \"text-shadow-color-(op|opacity)-<percent>\" }]\n];\nfunction handleThemeByKey(s, theme, key) {\n  return theme[key]?.[s] || h.bracket.cssvar.global.rem(s);\n}\nfunction handleSize([, s], { theme }) {\n  const themed = toArray(theme.fontSize?.[s]);\n  const size = themed?.[0] ?? h.bracket.cssvar.global.rem(s);\n  if (size != null)\n    return { \"font-size\": size };\n}\nfunction handlerColorOrSize(match, ctx) {\n  if (isCSSMathFn(h.bracket(match[1])))\n    return handleSize(match, ctx);\n  return colorResolver(\"color\", \"text\", \"textColor\")(match, ctx);\n}\nfunction handleText([, s = \"base\"], { theme }) {\n  const split = splitShorthand(s, \"length\");\n  if (!split)\n    return;\n  const [size, leading] = split;\n  const sizePairs = toArray(theme.fontSize?.[size]);\n  const lineHeight = leading ? handleThemeByKey(leading, theme, \"lineHeight\") : void 0;\n  if (sizePairs?.[0]) {\n    const [fontSize2, height, letterSpacing] = sizePairs;\n    if (typeof height === \"object\") {\n      return {\n        \"font-size\": fontSize2,\n        ...height\n      };\n    }\n    return {\n      \"font-size\": fontSize2,\n      \"line-height\": lineHeight ?? height ?? \"1\",\n      \"letter-spacing\": letterSpacing ? handleThemeByKey(letterSpacing, theme, \"letterSpacing\") : void 0\n    };\n  }\n  const fontSize = h.bracketOfLength.rem(size);\n  if (lineHeight && fontSize) {\n    return {\n      \"font-size\": fontSize,\n      \"line-height\": lineHeight\n    };\n  }\n  return { \"font-size\": h.bracketOfLength.rem(s) };\n}\n\nconst directions = {\n  \"\": \"\",\n  \"x\": \"column-\",\n  \"y\": \"row-\",\n  \"col\": \"column-\",\n  \"row\": \"row-\"\n};\nfunction handleGap([, d = \"\", s], { theme }) {\n  const v = theme.spacing?.[s] ?? h.bracket.cssvar.global.rem(s);\n  if (v != null) {\n    return {\n      [`${directions[d]}gap`]: v\n    };\n  }\n}\nconst gaps = [\n  [/^(?:flex-|grid-)?gap-?()(.+)$/, handleGap, { autocomplete: [\"gap-$spacing\", \"gap-<num>\"] }],\n  [/^(?:flex-|grid-)?gap-([xy])-?(.+)$/, handleGap, { autocomplete: [\"gap-(x|y)-$spacing\", \"gap-(x|y)-<num>\"] }],\n  [/^(?:flex-|grid-)?gap-(col|row)-?(.+)$/, handleGap, { autocomplete: [\"gap-(col|row)-$spacing\", \"gap-(col|row)-<num>\"] }]\n];\n\nfunction rowCol(s) {\n  return s.replace(\"col\", \"column\");\n}\nfunction rowColTheme(s) {\n  return s[0] === \"r\" ? \"Row\" : \"Column\";\n}\nfunction autoDirection(c, theme, prop) {\n  const v = theme[`gridAuto${rowColTheme(c)}`]?.[prop];\n  if (v != null)\n    return v;\n  switch (prop) {\n    case \"min\":\n      return \"min-content\";\n    case \"max\":\n      return \"max-content\";\n    case \"fr\":\n      return \"minmax(0,1fr)\";\n  }\n  return h.bracket.cssvar.auto.rem(prop);\n}\nconst grids = [\n  // displays\n  [\"grid\", { display: \"grid\" }],\n  [\"inline-grid\", { display: \"inline-grid\" }],\n  // global\n  [/^(?:grid-)?(row|col)-(.+)$/, ([, c, v], { theme }) => ({\n    [`grid-${rowCol(c)}`]: theme[`grid${rowColTheme(c)}`]?.[v] ?? h.bracket.cssvar.auto(v)\n  })],\n  // span\n  [/^(?:grid-)?(row|col)-span-(.+)$/, ([, c, s]) => {\n    if (s === \"full\")\n      return { [`grid-${rowCol(c)}`]: \"1/-1\" };\n    const v = h.bracket.number(s);\n    if (v != null)\n      return { [`grid-${rowCol(c)}`]: `span ${v}/span ${v}` };\n  }, { autocomplete: \"(grid-row|grid-col|row|col)-span-<num>\" }],\n  // starts & ends\n  [/^(?:grid-)?(row|col)-start-(.+)$/, ([, c, v]) => ({ [`grid-${rowCol(c)}-start`]: h.bracket.cssvar(v) ?? v })],\n  [/^(?:grid-)?(row|col)-end-(.+)$/, ([, c, v]) => ({ [`grid-${rowCol(c)}-end`]: h.bracket.cssvar(v) ?? v }), { autocomplete: \"(grid-row|grid-col|row|col)-(start|end)-<num>\" }],\n  // auto flows\n  [/^(?:grid-)?auto-(rows|cols)-(.+)$/, ([, c, v], { theme }) => ({ [`grid-auto-${rowCol(c)}`]: autoDirection(c, theme, v) }), { autocomplete: \"(grid-auto|auto)-(rows|cols)-<num>\" }],\n  // grid-auto-flow, auto-flow: uno\n  // grid-flow: wind\n  [/^(?:grid-auto-flow|auto-flow|grid-flow)-(.+)$/, ([, v]) => ({ \"grid-auto-flow\": h.bracket.cssvar(v) })],\n  [/^(?:grid-auto-flow|auto-flow|grid-flow)-(row|col|dense|row-dense|col-dense)$/, ([, v]) => ({ \"grid-auto-flow\": rowCol(v).replace(\"-\", \" \") }), { autocomplete: [\"(grid-auto-flow|auto-flow|grid-flow)-(row|col|dense|row-dense|col-dense)\"] }],\n  // templates\n  [/^(?:grid-)?(rows|cols)-(.+)$/, ([, c, v], { theme }) => ({\n    [`grid-template-${rowCol(c)}`]: theme[`gridTemplate${rowColTheme(c)}`]?.[v] ?? h.bracket.cssvar(v)\n  })],\n  [/^(?:grid-)?(rows|cols)-minmax-([\\w.-]+)$/, ([, c, d]) => ({ [`grid-template-${rowCol(c)}`]: `repeat(auto-fill,minmax(${d},1fr))` })],\n  [/^(?:grid-)?(rows|cols)-(\\d+)$/, ([, c, d]) => ({ [`grid-template-${rowCol(c)}`]: `repeat(${d},minmax(0,1fr))` }), { autocomplete: \"(grid-rows|grid-cols|rows|cols)-<num>\" }],\n  // areas\n  [/^grid-area(s)?-(.+)$/, ([, s, v]) => {\n    if (s != null)\n      return { \"grid-template-areas\": h.cssvar(v) ?? v.split(\"-\").map((s2) => `\"${h.bracket(s2)}\"`).join(\" \") };\n    return { \"grid-area\": h.bracket.cssvar(v) };\n  }],\n  // template none\n  [\"grid-rows-none\", { \"grid-template-rows\": \"none\" }],\n  [\"grid-cols-none\", { \"grid-template-columns\": \"none\" }],\n  // template subgrid\n  [\"grid-rows-subgrid\", { \"grid-template-rows\": \"subgrid\" }],\n  [\"grid-cols-subgrid\", { \"grid-template-columns\": \"subgrid\" }]\n];\n\nconst overflowValues = [\n  \"auto\",\n  \"hidden\",\n  \"clip\",\n  \"visible\",\n  \"scroll\",\n  \"overlay\",\n  ...globalKeywords\n];\nconst overflows = [\n  [/^(?:overflow|of)-(.+)$/, ([, v]) => overflowValues.includes(v) ? { overflow: v } : void 0, { autocomplete: [`(overflow|of)-(${overflowValues.join(\"|\")})`, `(overflow|of)-(x|y)-(${overflowValues.join(\"|\")})`] }],\n  [/^(?:overflow|of)-([xy])-(.+)$/, ([, d, v]) => overflowValues.includes(v) ? { [`overflow-${d}`]: v } : void 0]\n];\n\nconst positions = [\n  [/^(?:position-|pos-)?(relative|absolute|fixed|sticky)$/, ([, v]) => ({ position: v }), {\n    autocomplete: [\n      \"(position|pos)-<position>\",\n      \"(position|pos)-<globalKeyword>\",\n      \"<position>\"\n    ]\n  }],\n  [/^(?:position-|pos-)([-\\w]+)$/, ([, v]) => globalKeywords.includes(v) ? { position: v } : void 0],\n  [/^(?:position-|pos-)?(static)$/, ([, v]) => ({ position: v })]\n];\nconst justifies = [\n  // contents\n  [\"justify-start\", { \"justify-content\": \"flex-start\" }],\n  [\"justify-end\", { \"justify-content\": \"flex-end\" }],\n  [\"justify-center\", { \"justify-content\": \"center\" }],\n  [\"justify-between\", { \"justify-content\": \"space-between\" }],\n  [\"justify-around\", { \"justify-content\": \"space-around\" }],\n  [\"justify-evenly\", { \"justify-content\": \"space-evenly\" }],\n  [\"justify-stretch\", { \"justify-content\": \"stretch\" }],\n  [\"justify-left\", { \"justify-content\": \"left\" }],\n  [\"justify-right\", { \"justify-content\": \"right\" }],\n  ...makeGlobalStaticRules(\"justify\", \"justify-content\"),\n  // items\n  [\"justify-items-start\", { \"justify-items\": \"start\" }],\n  [\"justify-items-end\", { \"justify-items\": \"end\" }],\n  [\"justify-items-center\", { \"justify-items\": \"center\" }],\n  [\"justify-items-stretch\", { \"justify-items\": \"stretch\" }],\n  ...makeGlobalStaticRules(\"justify-items\"),\n  // selfs\n  [\"justify-self-auto\", { \"justify-self\": \"auto\" }],\n  [\"justify-self-start\", { \"justify-self\": \"start\" }],\n  [\"justify-self-end\", { \"justify-self\": \"end\" }],\n  [\"justify-self-center\", { \"justify-self\": \"center\" }],\n  [\"justify-self-stretch\", { \"justify-self\": \"stretch\" }],\n  ...makeGlobalStaticRules(\"justify-self\")\n];\nconst orders = [\n  [/^order-(.+)$/, ([, v]) => ({ order: h.bracket.cssvar.number(v) })],\n  [\"order-first\", { order: \"-9999\" }],\n  [\"order-last\", { order: \"9999\" }],\n  [\"order-none\", { order: \"0\" }]\n];\nconst alignments = [\n  // contents\n  [\"content-center\", { \"align-content\": \"center\" }],\n  [\"content-start\", { \"align-content\": \"flex-start\" }],\n  [\"content-end\", { \"align-content\": \"flex-end\" }],\n  [\"content-between\", { \"align-content\": \"space-between\" }],\n  [\"content-around\", { \"align-content\": \"space-around\" }],\n  [\"content-evenly\", { \"align-content\": \"space-evenly\" }],\n  ...makeGlobalStaticRules(\"content\", \"align-content\"),\n  // items\n  [\"items-start\", { \"align-items\": \"flex-start\" }],\n  [\"items-end\", { \"align-items\": \"flex-end\" }],\n  [\"items-center\", { \"align-items\": \"center\" }],\n  [\"items-baseline\", { \"align-items\": \"baseline\" }],\n  [\"items-stretch\", { \"align-items\": \"stretch\" }],\n  ...makeGlobalStaticRules(\"items\", \"align-items\"),\n  // selfs\n  [\"self-auto\", { \"align-self\": \"auto\" }],\n  [\"self-start\", { \"align-self\": \"flex-start\" }],\n  [\"self-end\", { \"align-self\": \"flex-end\" }],\n  [\"self-center\", { \"align-self\": \"center\" }],\n  [\"self-stretch\", { \"align-self\": \"stretch\" }],\n  [\"self-baseline\", { \"align-self\": \"baseline\" }],\n  ...makeGlobalStaticRules(\"self\", \"align-self\")\n];\nconst placements = [\n  // contents\n  [\"place-content-center\", { \"place-content\": \"center\" }],\n  [\"place-content-start\", { \"place-content\": \"start\" }],\n  [\"place-content-end\", { \"place-content\": \"end\" }],\n  [\"place-content-between\", { \"place-content\": \"space-between\" }],\n  [\"place-content-around\", { \"place-content\": \"space-around\" }],\n  [\"place-content-evenly\", { \"place-content\": \"space-evenly\" }],\n  [\"place-content-stretch\", { \"place-content\": \"stretch\" }],\n  ...makeGlobalStaticRules(\"place-content\"),\n  // items\n  [\"place-items-start\", { \"place-items\": \"start\" }],\n  [\"place-items-end\", { \"place-items\": \"end\" }],\n  [\"place-items-center\", { \"place-items\": \"center\" }],\n  [\"place-items-stretch\", { \"place-items\": \"stretch\" }],\n  ...makeGlobalStaticRules(\"place-items\"),\n  // selfs\n  [\"place-self-auto\", { \"place-self\": \"auto\" }],\n  [\"place-self-start\", { \"place-self\": \"start\" }],\n  [\"place-self-end\", { \"place-self\": \"end\" }],\n  [\"place-self-center\", { \"place-self\": \"center\" }],\n  [\"place-self-stretch\", { \"place-self\": \"stretch\" }],\n  ...makeGlobalStaticRules(\"place-self\")\n];\nconst flexGridJustifiesAlignments = [...justifies, ...alignments, ...placements].flatMap(([k, v]) => [\n  [`flex-${k}`, v],\n  [`grid-${k}`, v]\n]);\nfunction handleInsetValue(v, { theme }) {\n  return theme.spacing?.[v] ?? h.bracket.cssvar.global.auto.fraction.rem(v);\n}\nfunction handleInsetValues([, d, v], ctx) {\n  const r = handleInsetValue(v, ctx);\n  if (r != null && d in insetMap)\n    return insetMap[d].map((i) => [i.slice(1), r]);\n}\nconst insets = [\n  [\n    /^(?:position-|pos-)?inset-(.+)$/,\n    ([, v], ctx) => ({ inset: handleInsetValue(v, ctx) }),\n    {\n      autocomplete: [\n        \"(position|pos)-inset-<directions>-$spacing\",\n        \"(position|pos)-inset-(block|inline)-$spacing\",\n        \"(position|pos)-inset-(bs|be|is|ie)-$spacing\",\n        \"(position|pos)-(top|left|right|bottom)-$spacing\"\n      ]\n    }\n  ],\n  [/^(?:position-|pos-)?(start|end)-(.+)$/, handleInsetValues],\n  [/^(?:position-|pos-)?inset-([xy])-(.+)$/, handleInsetValues],\n  [/^(?:position-|pos-)?inset-([rltbse])-(.+)$/, handleInsetValues],\n  [/^(?:position-|pos-)?inset-(block|inline)-(.+)$/, handleInsetValues],\n  [/^(?:position-|pos-)?inset-([bi][se])-(.+)$/, handleInsetValues],\n  [/^(?:position-|pos-)?(top|left|right|bottom)-(.+)$/, ([, d, v], ctx) => ({ [d]: handleInsetValue(v, ctx) })]\n];\nconst floats = [\n  // floats\n  [\"float-left\", { float: \"left\" }],\n  [\"float-right\", { float: \"right\" }],\n  [\"float-none\", { float: \"none\" }],\n  ...makeGlobalStaticRules(\"float\"),\n  // clears\n  [\"clear-left\", { clear: \"left\" }],\n  [\"clear-right\", { clear: \"right\" }],\n  [\"clear-both\", { clear: \"both\" }],\n  [\"clear-none\", { clear: \"none\" }],\n  ...makeGlobalStaticRules(\"clear\")\n];\nconst zIndexes = [\n  [/^(?:position-|pos-)?z([\\d.]+)$/, ([, v]) => ({ \"z-index\": h.number(v) })],\n  [/^(?:position-|pos-)?z-(.+)$/, ([, v], { theme }) => ({ \"z-index\": theme.zIndex?.[v] ?? h.bracket.cssvar.global.auto.number(v) }), { autocomplete: \"z-<num>\" }]\n];\nconst boxSizing = [\n  [\"box-border\", { \"box-sizing\": \"border-box\" }],\n  [\"box-content\", { \"box-sizing\": \"content-box\" }],\n  ...makeGlobalStaticRules(\"box\", \"box-sizing\")\n];\n\nconst sizeMapping = {\n  h: \"height\",\n  w: \"width\",\n  inline: \"inline-size\",\n  block: \"block-size\"\n};\nfunction getPropName(minmax, hw) {\n  return `${minmax || \"\"}${sizeMapping[hw]}`;\n}\nfunction getSizeValue(minmax, hw, theme, prop) {\n  const str = getPropName(minmax, hw).replace(/-(\\w)/g, (_, p) => p.toUpperCase());\n  const v = theme[str]?.[prop];\n  if (v != null)\n    return v;\n  switch (prop) {\n    case \"fit\":\n    case \"max\":\n    case \"min\":\n      return `${prop}-content`;\n  }\n  return h.bracket.cssvar.global.auto.fraction.rem(prop);\n}\nconst sizes = [\n  [/^size-(min-|max-)?(.+)$/, ([, m, s], { theme }) => ({ [getPropName(m, \"w\")]: getSizeValue(m, \"w\", theme, s), [getPropName(m, \"h\")]: getSizeValue(m, \"h\", theme, s) })],\n  [/^(?:size-)?(min-|max-)?([wh])-?(.+)$/, ([, m, w, s], { theme }) => ({ [getPropName(m, w)]: getSizeValue(m, w, theme, s) })],\n  [/^(?:size-)?(min-|max-)?(block|inline)-(.+)$/, ([, m, w, s], { theme }) => ({ [getPropName(m, w)]: getSizeValue(m, w, theme, s) }), {\n    autocomplete: [\n      \"(w|h)-$width|height|maxWidth|maxHeight|minWidth|minHeight|inlineSize|blockSize|maxInlineSize|maxBlockSize|minInlineSize|minBlockSize\",\n      \"(block|inline)-$width|height|maxWidth|maxHeight|minWidth|minHeight|inlineSize|blockSize|maxInlineSize|maxBlockSize|minInlineSize|minBlockSize\",\n      \"(max|min)-(w|h|block|inline)\",\n      \"(max|min)-(w|h|block|inline)-$width|height|maxWidth|maxHeight|minWidth|minHeight|inlineSize|blockSize|maxInlineSize|maxBlockSize|minInlineSize|minBlockSize\",\n      \"(w|h)-full\",\n      \"(max|min)-(w|h)-full\"\n    ]\n  }],\n  [/^(?:size-)?(min-|max-)?(h)-screen-(.+)$/, ([, m, h2, p], context) => ({ [getPropName(m, h2)]: handleBreakpoint(context, p, \"verticalBreakpoints\") })],\n  [/^(?:size-)?(min-|max-)?(w)-screen-(.+)$/, ([, m, w, p], context) => ({ [getPropName(m, w)]: handleBreakpoint(context, p) }), {\n    autocomplete: [\n      \"(w|h)-screen\",\n      \"(min|max)-(w|h)-screen\",\n      \"h-screen-$verticalBreakpoints\",\n      \"(min|max)-h-screen-$verticalBreakpoints\",\n      \"w-screen-$breakpoints\",\n      \"(min|max)-w-screen-$breakpoints\"\n    ]\n  }]\n];\nfunction handleBreakpoint(context, point, key = \"breakpoints\") {\n  const bp = resolveBreakpoints(context, key);\n  if (bp)\n    return bp.find((i) => i.point === point)?.size;\n}\nfunction getAspectRatio(prop) {\n  if (/^\\d+\\/\\d+$/.test(prop))\n    return prop;\n  switch (prop) {\n    case \"square\":\n      return \"1/1\";\n    case \"video\":\n      return \"16/9\";\n  }\n  return h.bracket.cssvar.global.auto.number(prop);\n}\nconst aspectRatio = [\n  [/^(?:size-)?aspect-(?:ratio-)?(.+)$/, ([, d]) => ({ \"aspect-ratio\": getAspectRatio(d) }), { autocomplete: [\"aspect-(square|video|ratio)\", \"aspect-ratio-(square|video)\"] }]\n];\n\nconst paddings = [\n  [/^pa?()-?(-?.+)$/, directionSize(\"padding\"), { autocomplete: [\"(m|p)<num>\", \"(m|p)-<num>\"] }],\n  [/^p-?xy()()$/, directionSize(\"padding\"), { autocomplete: \"(m|p)-(xy)\" }],\n  [/^p-?([xy])(?:-?(-?.+))?$/, directionSize(\"padding\")],\n  [/^p-?([rltbse])(?:-?(-?.+))?$/, directionSize(\"padding\"), { autocomplete: \"(m|p)<directions>-<num>\" }],\n  [/^p-(block|inline)(?:-(-?.+))?$/, directionSize(\"padding\"), { autocomplete: \"(m|p)-(block|inline)-<num>\" }],\n  [/^p-?([bi][se])(?:-?(-?.+))?$/, directionSize(\"padding\"), { autocomplete: \"(m|p)-(bs|be|is|ie)-<num>\" }]\n];\nconst margins = [\n  [/^ma?()-?(-?.+)$/, directionSize(\"margin\")],\n  [/^m-?xy()()$/, directionSize(\"margin\")],\n  [/^m-?([xy])(?:-?(-?.+))?$/, directionSize(\"margin\")],\n  [/^m-?([rltbse])(?:-?(-?.+))?$/, directionSize(\"margin\")],\n  [/^m-(block|inline)(?:-(-?.+))?$/, directionSize(\"margin\")],\n  [/^m-?([bi][se])(?:-?(-?.+))?$/, directionSize(\"margin\")]\n];\n\nconst variablesAbbrMap = {\n  backface: \"backface-visibility\",\n  break: \"word-break\",\n  case: \"text-transform\",\n  content: \"align-content\",\n  fw: \"font-weight\",\n  items: \"align-items\",\n  justify: \"justify-content\",\n  select: \"user-select\",\n  self: \"align-self\",\n  vertical: \"vertical-align\",\n  visible: \"visibility\",\n  whitespace: \"white-space\",\n  ws: \"white-space\"\n};\nconst cssVariables = [\n  [/^(.+?)-(\\$.+)$/, ([, name, varname]) => {\n    const prop = variablesAbbrMap[name];\n    if (prop)\n      return { [prop]: h.cssvar(varname) };\n  }]\n];\nconst cssProperty = [\n  [/^\\[(.*)\\]$/, ([_, body]) => {\n    if (!body.includes(\":\"))\n      return;\n    const [prop, ...rest] = body.split(\":\");\n    const value = rest.join(\":\");\n    if (!isURI(body) && /^[a-z-]+$/.test(prop) && isValidCSSBody(value)) {\n      const parsed = h.bracket(`[${value}]`);\n      if (parsed)\n        return { [prop]: parsed };\n    }\n  }]\n];\nfunction isValidCSSBody(body) {\n  let i = 0;\n  function findUntil(c) {\n    while (i < body.length) {\n      i += 1;\n      const char = body[i];\n      if (char === c)\n        return true;\n    }\n    return false;\n  }\n  for (i = 0; i < body.length; i++) {\n    const c = body[i];\n    if (\"\\\"`'\".includes(c)) {\n      if (!findUntil(c))\n        return false;\n    } else if (c === \"(\") {\n      if (!findUntil(\")\"))\n        return false;\n    } else if (\"[]{}:\".includes(c)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isURI(declaration) {\n  if (!declaration.includes(\"://\"))\n    return false;\n  try {\n    return new URL(declaration).host !== \"\";\n  } catch (err) {\n    return false;\n  }\n}\n\nconst questionMark = [\n  [\n    /^(where|\\?)$/,\n    (_, { constructCSS, generator }) => {\n      if (generator.userConfig.envMode === \"dev\")\n        return `@keyframes __un_qm{0%{box-shadow:inset 4px 4px #ff1e90, inset -4px -4px #ff1e90}100%{box-shadow:inset 8px 8px #3399ff, inset -8px -8px #3399ff}}\n${constructCSS({ animation: \"__un_qm 0.5s ease-in-out alternate infinite\" })}`;\n    }\n  ]\n];\n\nconst svgUtilities = [\n  // fills\n  [/^fill-(.+)$/, colorResolver(\"fill\", \"fill\", \"backgroundColor\"), { autocomplete: \"fill-$colors\" }],\n  [/^fill-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-fill-opacity\": h.bracket.percent.cssvar(opacity) }), { autocomplete: \"fill-(op|opacity)-<percent>\" }],\n  [\"fill-none\", { fill: \"none\" }],\n  // stroke size\n  [/^stroke-(?:width-|size-)?(.+)$/, handleWidth, { autocomplete: [\"stroke-width-$lineWidth\", \"stroke-size-$lineWidth\"] }],\n  // stroke dash\n  [/^stroke-dash-(.+)$/, ([, s]) => ({ \"stroke-dasharray\": h.bracket.cssvar.number(s) }), { autocomplete: \"stroke-dash-<num>\" }],\n  [/^stroke-offset-(.+)$/, ([, s], { theme }) => ({ \"stroke-dashoffset\": theme.lineWidth?.[s] ?? h.bracket.cssvar.px.numberWithUnit(s) }), { autocomplete: \"stroke-offset-$lineWidth\" }],\n  // stroke colors\n  [/^stroke-(.+)$/, handleColorOrWidth, { autocomplete: \"stroke-$colors\" }],\n  [/^stroke-op(?:acity)?-?(.+)$/, ([, opacity]) => ({ \"--un-stroke-opacity\": h.bracket.percent.cssvar(opacity) }), { autocomplete: \"stroke-(op|opacity)-<percent>\" }],\n  // line cap\n  [\"stroke-cap-square\", { \"stroke-linecap\": \"square\" }],\n  [\"stroke-cap-round\", { \"stroke-linecap\": \"round\" }],\n  [\"stroke-cap-auto\", { \"stroke-linecap\": \"butt\" }],\n  // line join\n  [\"stroke-join-arcs\", { \"stroke-linejoin\": \"arcs\" }],\n  [\"stroke-join-bevel\", { \"stroke-linejoin\": \"bevel\" }],\n  [\"stroke-join-clip\", { \"stroke-linejoin\": \"miter-clip\" }],\n  [\"stroke-join-round\", { \"stroke-linejoin\": \"round\" }],\n  [\"stroke-join-auto\", { \"stroke-linejoin\": \"miter\" }],\n  // none\n  [\"stroke-none\", { stroke: \"none\" }]\n];\nfunction handleWidth([, b], { theme }) {\n  return { \"stroke-width\": theme.lineWidth?.[b] ?? h.bracket.cssvar.fraction.px.number(b) };\n}\nfunction handleColorOrWidth(match, ctx) {\n  if (isCSSMathFn(h.bracket(match[1])))\n    return handleWidth(match, ctx);\n  return colorResolver(\"stroke\", \"stroke\", \"borderColor\")(match, ctx);\n}\n\nconst rules = [\n  cssVariables,\n  cssProperty,\n  paddings,\n  margins,\n  displays,\n  opacity,\n  bgColors,\n  colorScheme,\n  svgUtilities,\n  borders,\n  contentVisibility,\n  contents,\n  fonts,\n  tabSizes,\n  textIndents,\n  textOverflows,\n  textDecorations,\n  textStrokes,\n  textShadows,\n  textTransforms,\n  textAligns,\n  fontStyles,\n  fontSmoothings,\n  boxShadows,\n  rings,\n  flex,\n  grids,\n  gaps,\n  positions,\n  sizes,\n  aspectRatio,\n  cursors,\n  appearances,\n  pointerEvents,\n  resizes,\n  verticalAligns,\n  userSelects,\n  whitespaces,\n  breaks,\n  overflows,\n  outline,\n  appearance,\n  orders,\n  justifies,\n  alignments,\n  placements,\n  flexGridJustifiesAlignments,\n  insets,\n  floats,\n  zIndexes,\n  boxSizing,\n  transitions,\n  transforms,\n  willChange,\n  containerParent,\n  contains,\n  textWraps,\n  // should be the last\n  questionMark\n].flat(1);\n\nexport { zIndexes as A, boxSizing as B, questionMark as C, sizes as D, aspectRatio as E, paddings as F, margins as G, svgUtilities as H, transitions as I, fonts as J, tabSizes as K, textIndents as L, textStrokes as M, textShadows as N, cssVariables as O, cssProperty as P, appearance as a, borderStyles as b, borders as c, opacity as d, bgColors as e, colorScheme as f, containerParent as g, handlerBorderStyle as h, textDecorations as i, flex as j, gaps as k, grids as l, overflows as m, justifies as n, outline as o, positions as p, orders as q, rules as r, alignments as s, textAligns as t, placements as u, verticalAligns as v, willChange as w, flexGridJustifiesAlignments as x, insets as y, floats as z };\n"],
  "mappings": "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
  "names": ["opacity", "opacity", "handleWidth", "handleColorOrWidth"]
}
